name: Validate starter notebooks

on:
  pull_request:
  push:
    branches: [main]

jobs:
  check-starters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install nbformat
      - name: Ensure starter notebooks are in sync
        run: python tools/generate_starters.py --check

  execute-notebooks:
    runs-on: ubuntu-latest
    needs: check-starters
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install notebook runtime
        run: |
          python -m pip install --upgrade pip
          pip install nbconvert nbclient ipykernel pandas matplotlib seaborn plotly
      - name: Run solution notebooks
        run: |
          python - <<'PY'
          import nbformat
          from nbclient import NotebookClient
          from pathlib import Path

          notebooks = sorted(Path("days").glob("day*/solution/*.ipynb"))
          if not notebooks:
              raise SystemExit("No solution notebooks found")

          for nb_path in notebooks:
              print(f"Executing {nb_path}")
              nb = nbformat.read(nb_path.open(), as_version=4)
              client = NotebookClient(nb, timeout=600, kernel_name="python3")
              client.execute(cwd=str(Path.cwd()))
          PY
      - name: Run starter notebooks
        run: |
          python - <<'PY'
          import nbformat
          from nbclient import NotebookClient
          from pathlib import Path

          notebooks = sorted(Path("days").glob("day*/notebook/*.ipynb"))
          if not notebooks:
              raise SystemExit("No starter notebooks found")

          for nb_path in notebooks:
              print(f"Executing {nb_path}")
              nb = nbformat.read(nb_path.open(), as_version=4)
              client = NotebookClient(nb, timeout=600, kernel_name="python3")
              client.execute(cwd=str(Path.cwd()))
          PY
